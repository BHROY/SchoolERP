@model SchoolManagement.Models.SubjectPerformanceViewModel

@{
    ViewBag.Title = "Add Subjects";
    Layout = "~/Views/Shared/_LayoutSuperAdmin.cshtml";
}

<style>
    .dataTables_wrapper div.dataTables_filter input {
        width: 72% !important;
    }

    .trackInput {
        width: 80% !important;
    }

    .modal-lg {
        width: 25%;
    }

    .panel-body {
        padding-left: 5%;
        padding-right: 5%;
        padding-top: 0px;
    }
</style>
<h4 class="page-header">Add Subjects</h4>

<div class="row" style="padding-top:2%">

    <div class="col-sm-1 text-right">
        @Html.LabelFor(model => model.ClassID, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-lg-2 text-left">
        @Html.DropDownListFor(model => model.ClassID, new SelectList(Model.ListofClass, "Value", "Text"), "Select", new { id = "ddlClass", @class = "form-control" })
    </div>
</div>


<link href="~/Scripts/dataTablesScripts/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Scripts/dataTablesScripts/responsive.bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/dataTablesScripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTablesScripts/dataTables.bootstrap4.min.js"></script>
<script src="@Url.Content(" ~ /Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>

<div class="row">
    <div class="col-lg-1">
        &nbsp;
    </div>
    <div class="col-lg-4" id="divPerformanceTable" style="padding-top:2%">
        <div class="panel panel-default" style="width:80%">
            <div class="panel-body">
                <div style="padding-top: 10px;">
                    @if (Model.ListofSubjects.Count > 0)
                    {
                        <table id="myTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th style="width:20%">@Html.CheckBox("templateId", new { @class = "headerChkEvent" })</th>
                                    <th>Subject</th>
                                </tr>
                            </thead>
                            @for (var themeIndex = 0; themeIndex < Model.ListofSubjects.Count(); themeIndex++)
                            {
                                <tr>
                                    <td>
                                        @Html.CheckBoxFor(m => m.ListofSubjects[themeIndex].isCheck, new { @class = "rowChkEvent" })
                                    </td>
                                    <td>
                                        @Html.HiddenFor(model => model.ListofSubjects[themeIndex].Value, new { @class = "clsSubjectID" })
                                        @Html.DisplayFor(model => model.ListofSubjects[themeIndex].Text)
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                </div>
            </div>
            <div class="panel-footer">
                <div class="col-lg-8">
                    &nbsp;
                </div>
                <input type="button" id="btnSave" value="Save" class="btn btn-info"/>
            </div>
        </div>
    </div>
    <div class="col-lg-4" id="divAddedSubjects" style="padding-top:2%">
        <div class="panel panel-default" style="padding-left:2%">
            <div class="panel-body">
                <table id="myAddedSubjects" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Subjects Added</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        $("#divAddedSubjects").hide();
        $('.headerChkEvent').click(function () {
            $("input[type=checkbox][class=rowChkEvent]").prop("checked", $(this).is(":checked"));
        });
        $('.rowChkEvent').click(function () {
            var chk = isAllRowChecked();
            $("input[type=checkbox][class=headerChkEvent]").prop("checked", chk);
        });
        $("#ddlClass").on("change", function () {
            var clsID = $("#ddlClass").val();
            if (clsID == "") {
                $("#divAddedSubjects").hide();
            }
            else {
                bindSavedSubjects();
                showHideEditableSubjectDiv();
                $("#divAddedSubjects").show();
            }
        });
        $('#btnSave').click(function () {
            var clsID = $("#ddlClass").val();
            if (clsID == "") {
                alert("Select Class");
                $("#divAddedSubjects").hide();
                return false;
            }
            else {
                var url = '@Url.Content("~/")' + "SubjectPerformances/InsertUpdateClassToSubject";
                var list = [];
                $(".rowChkEvent:checked").each(function () {
                    list.push(parseInt($(this).parent().parent().find(".clsSubjectID").prop("defaultValue")));
                });
                $.ajax({
                    type: "POST",
                    url: url,
                    data: JSON.stringify({ ClassID: clsID, SubjectIDList: list }),
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    success: function (jsonData) {
                        alert("success");
                        bindSavedSubjects();
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }
        });
    });

    function isAllRowChecked() {
        var chkRowLength = $("input[type=checkbox][class=rowChkEvent]").length;
        for (var i = 0; i < chkRowLength; i++) {
            if ($("input[type=checkbox][class=rowChkEvent]")[i].checked == false)
                return false;
        }
        return true;
    }

    function bindSavedSubjects() {
        $("#myAddedSubjects").dataTable().fnDestroy();
        $("#myAddedSubjects").DataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "paging": false,
            "ordering": false,
            "info": false,
            "ajax": {
                "url": "/SubjectPerformances/ShowClassWiseAddedSubjects",
                "type": "POST",
                "data": {
                    "ClassID": $("#ddlClass").val()
                },
                "datatype": "json"
            },
            "columnDefs":
                [{
                    "targets": [0],
                    //"orderable": false,
                    "searchable": false
                },
                ],

            "columns": [
                { "data": "Text", "name": "Text", "autoWidth": true },
            ]

        });
    }

    function showHideEditableSubjectDiv(){
         var url = '@Url.Content("~/")' + "SubjectPerformances/CheckIfExamHeldForClass";
            $.ajax({
                type: "POST",
                url: url,
                data: '{ ClassID: "' + $("#ddlClass").val() + '"}',
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                success: function (jsonData) {
                    if (jsonData.checkIfExamHeldForClass == true) {
                        $("#divPerformanceTable").hide();
                        alert("Exam held for the class, Can't alter subjects");
                    }
                    else {
                        $("#divPerformanceTable").show();
                    }
                }
            });
    }

</script>
