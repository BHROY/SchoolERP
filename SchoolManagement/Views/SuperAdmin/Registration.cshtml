@model SchoolManagement.Models.StudentViewModel
@{
    Layout = "~/Views/Shared/_LayoutSuperAdmin.cshtml";
}

 <h4 class="page-header">Student Admission</h4>

    <div class="panel panel-default">
        <div class="panel-heading">Create User</div>
        <div class="panel-body">

            @if (TempData["MessageRegistration"] != null)
            {
        <p class="alert alert-success" id="successMessage">@TempData["MessageRegistration"]</p>            }

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @using (Html.BeginForm("Registration", "SuperAdmin", FormMethod.Post, new { autocomplete = "off", enctype = "multipart/form-data", id = "formD" }))
            {
        @Html.AntiForgeryToken()

                        <div class="row">
                            <div class="col-lg-4">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label manadatory" })
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @maxlength = 40, @onkeypress = "return onlyspecchar(event);" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-4">
                                @Html.LabelFor(model => model.Mobileno, htmlAttributes: new { @class = "control-label manadatory" })
                                @Html.TextBoxFor(model => model.Mobileno, new { @class = "form-control", @maxlength = 10, @onkeydown = "return OnlyNumeric(this);" })
                                @Html.ValidationMessageFor(model => model.Mobileno, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-4">
                                @Html.LabelFor(model => model.StudentClassID, htmlAttributes: new { @class = "control-label manadatory" })
                                @Html.DropDownListFor(model => model.StudentClassID, new SelectList(Model.ListofClass, "Value", "Text"), "Select", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StudentClassID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="clearfix"></div>
                            <div class="col-lg-4">
                                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label manadatory" })
                                @Html.TextBoxFor(model => model.FatherName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-4">
                                @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.MotherName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                            </div>
                            
                            <div class="col-lg-4">
                                @Html.Label("AdmissionDate", "Admission Date", htmlAttributes: new { @class = "control-label manadatory" })
                                @Html.TextBoxFor(model => model.DateofJoining, new { id = "txtDateofJoining", @class = "form-control", @onkeypress = "alert('Choose DateofJoining');", @onchange = "CheckSessionList();" })
                                @Html.ValidationMessageFor(model => model.DateofJoining, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="clearfix"></div>
                            <div class="col-lg-4">
                                @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label manadatory" })
                                @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control", @onkeypress = "alert('Choose Birthdate');" })
                                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-4" style="margin-top:10px;">

                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label manadatory" })
                                <br />
                                @Html.RadioButtonFor(model => model.Gender, "M") @Html.Label("", "Male")
                                @Html.RadioButtonFor(model => model.Gender, "F") @Html.Label("", "Female")
                                <br />
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-4">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                                                                                        <br />
                                                                                                        <div class="row">
                                                                                                            <div class="col-lg-4">
                                                                                                                <input type="submit" value="Create User" class="btn btn-success" />
                                                                                                                @Html.ActionLink("Clear", "Registration", "SuperAdmin", null, new { @class = "btn btn-danger" })

                                                                                                                @Html.ActionLink("All Users", "Users", "AllUsers", null, new { @class = "btn btn-info" })

                                                                                                            </div>
                                                                                                        </div>            }

        </div>
    </div>




    <script type="text/javascript">

    $(document).ready(function () {
        $("#Birthdate").datepicker
            ({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+100",
                onSelect: function (date) {
                    var dob = new Date(date);
                    var today = new Date();

                    if (dob.getFullYear() + 30 > today.getFullYear()) {

                    }
                    else {
                        $("#Birthdate").val('');
                        alert("You are not eligible for Registration");
                    }
                }
            });

        $("#txtDateofJoining").datepicker
           ({
               dateFormat: "yy-mm-dd",
               changeMonth: true,
               changeYear: true,
               yearRange: "-100:+100"
           });

    });

    function OnlyNumeric(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode
        if ((charCode < 48 || charCode > 57)) {
            if (charCode == 8 || charCode == 46 || charCode == 0) {
                return true;
            }
            else {
                return false;
            }
        }
    }

    function onlyspecchar(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode
        var txt = String.fromCharCode(charCode)
        if ((txt.match(/^[a-zA-Z\b. ]+$/)) || (txt.match(/^[0-9]+$/)) || (charCode == 64) || (charCode == 45) || (charCode == 46) || (charCode == 95) || (charCode == 41)) {
            return true;
        }
        return false;
    }

    function CheckSessionList() {

        var url = '@Url.Content("~/")' + "AllUsers/CheckAdmissionSessionforRegistration";
        $.ajax({
            type: "POST",
            url: url,
            //data: fileData,
            data: '{ AdmDate: "' + $("#txtDateofJoining").val() + '"}',
            contentType: "application/json; charset=utf-8",
            //dataType: "json",
            success: function (response) {
                if (response.Status == "True") {
                    $("#txtDateofJoining").val('');
                    alert(response.Message);
                }


            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }
    </script>